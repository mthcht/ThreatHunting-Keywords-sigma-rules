[
    {
        "keyword": "*NoPowerShell32.dll*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*\\NoPowerShell*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*NoPowerShell.sln*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*bofnet_execute *",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*NoPowerShell.Commands*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*NoPowerShell_trunk.zip*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*bofnet_execute.cpp.x86.obj*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*nps whoami*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*bofnet.cna*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*== NoPowerShell v* ==*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*bofnet_load *",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*GetWhoamiCommand.cs*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*NoPowerShell64.dll*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*555AD0AC-1FDB-4016-8257-170A74CB2F55*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": false
    },
    {
        "keyword": "*NoPowerShell.dll*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*/nopowershell.git*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*bitsadmin/nopowershell*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*https://github.com/bitsadmin/*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*BOFNET.dll*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*/NoPowerShell/*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*NoPowerShell.exe*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*NoPowerShell.cna*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*bofnet_execute.cpp.x64.obj*",
        "description": "NoPowerShell is a tool implemented in C# which supports executing PowerShell-like commands while remaining invisible to any PowerShell logging mechanisms. This .NET Framework 2 compatible binary can be loaded in Cobalt Strike to execute commands in-memory. No System.Management.Automation.dll is used. only native .NET libraries. An alternative usecase for NoPowerShell is to launch it as a DLL via rundll32.exe: rundll32 NoPowerShell.dll.main.",
        "tool_name": "nopowershell",
        "reference": "https://github.com/bitsadmin/nopowershell",
        "severity": "10",
        "popularity": "10",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0002 - TA0003 - TA0005",
        "techniques": "T1059 - T1086 - T1500 - T1564 - T1127 - T1027",
        "endpoint_detection": true,
        "network_detection": true
    }
]