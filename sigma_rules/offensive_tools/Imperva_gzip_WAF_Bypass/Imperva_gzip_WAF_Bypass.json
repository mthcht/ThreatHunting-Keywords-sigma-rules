[
    {
        "keyword": "*imperva_gzip.py*",
        "description": "Imperva Cloud WAF was vulnerable to a bypass that allows attackers to evade WAF rules when sending malicious HTTP POST payloads. such as log4j exploits. SQL injection. command execution. directory traversal. XXE. etc.",
        "tool_name": "Imperva_gzip_WAF_Bypass",
        "reference": "https://github.com/BishopFox/Imperva_gzip_WAF_Bypass",
        "severity": "N/A",
        "popularity": "2",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0001 - TA0002 - TA0003 - TA0040",
        "techniques": "T1190 - T1210 - T1506 - T1061 - T1071 - T1100 - T1220",
        "endpoint_detection": true,
        "network_detection": true
    },
    {
        "keyword": "*/Imperva_gzip_WAF_Bypass*",
        "description": "Imperva Cloud WAF was vulnerable to a bypass that allows attackers to evade WAF rules when sending malicious HTTP POST payloads. such as log4j exploits. SQL injection. command execution. directory traversal. XXE. etc.",
        "tool_name": "Imperva_gzip_WAF_Bypass",
        "reference": "https://github.com/BishopFox/Imperva_gzip_WAF_Bypass",
        "severity": "N/A",
        "popularity": "2",
        "keyword_type": "offensive_tool_keyword",
        "comment": "N/A",
        "tactics": "TA0001 - TA0002 - TA0003 - TA0040",
        "techniques": "T1190 - T1210 - T1506 - T1061 - T1071 - T1100 - T1220",
        "endpoint_detection": true,
        "network_detection": true
    }
]